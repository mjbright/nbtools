
# Used back in the day on first TF-Azure run ... masking remote use of  Docker
# Could probably have used docker via ssh driver anyhow ... via an ENV var or config file ?

function __DOCKER {
    # In nbtools.py replace by "ssh vm-linux-docker docker $*"
    __NB_DEBUG docker $*
    docker $*
    __RETURN
}

function __CURL {
    # In nbtools.py replace by "ssh vm-linux-docker docker $*"
    __NB_DEBUG curl $*
    curl $*
    __RETURN
}

# Kubernetes-specific:
function __K_GET {
    kubectl get $*
    # TODO: If kubectl get svc, get service => recuperate IP, PORT info
    # TODO: If kubectl get po, get pod      => recuperate IP, PORT info
}

function __K_CREATE {
    kubectl create $*
    # TODO: If kubectl create svc, create service => recuperate IP, PORT info
    # TODO: If kubectl create dep, create deploy  => recuperate IP, PORT info
    # TODO: If kubectl run                        => recuperate IP, PORT info
    # Check in YAML ?!
    #if [ "$1" = "pod" ]; then
    #fi

    # TODO:
    # Create deploy - wait for Pods ready? ==> NO use WAIT_PODS function
}

# __CLEANUP      FUNCTIONS: ---------------------------------------------

function K_CLEANUP_TRAEFIK {
    # kubectl delete -f https://raw.githubusercontent.com/containous/traefik/v1.7/examples/k8s/traefik-deployment.yaml
    # kubectl delete -f https://raw.githubusercontent.com/containous/traefik/v1.7/examples/k8s/traefik-rbac.yaml

    kubectl -n kube-system delete deploy/traefik-ingress-controller
    kubectl -n kube-system delete svc traefik-ingress-service
    kubectl -n kube-system delete sa/traefik-ingress-controller
    kubectl delete clusterrolebinding/traefik-ingress-controller
    kubectl delete clusterrole/traefik-ingress-controller
    kubectl -n kube-system delete sa/traefik-ingress-controller
}

function K_CLEANUP {
    SET_NAMESPACE "$1"
    echo
    echo "======== CLEANUP namespace($NS) ==========================="
    #kubectl get ns
    #kubectl delete ns frontend
    echo -n "Deployments: "
    kubectl -n $NS delete deploy --all
    echo -n "Services:    "
    kubectl -n $NS delete service --all
    sleep 2
    echo -n "Pods:        "
    kubectl -n $NS delete pods --all

    #kubectl taint node master node-role.kubernetes.io/master:NoSchedule
    echo
    echo "======== Remaining pods across all namespaces ==========================="
    kubectl get pods -A
    NB_WAIT_NO_PODS
}

function K_SETUP {
    [ ! -z "$_SETUP_RUN" ] && return 0
    export _SETUP_RUN=$(date)

    # Jupyter on Ubuntu, or in kubelab:
    [ $(id -un) = "root" ] && export HOME=/root
    ## [ -f /root/.profile ]         && . /root/.profile
    ## [ -f /root/.jupyter.profile ] && . /root/.jupyter.profile
    export PATH=~/bin:$PATH
    #### ls -altr ~/
    kubectl get pods

    echo "$(kubectl get nodes master -o custom-columns=IP:.status.addresses[0].address --no-headers) master" >> /etc/hosts
    echo "$(kubectl get nodes worker1 -o custom-columns=IP:.status.addresses[0].address --no-headers) worker1" >> /etc/hosts

    echo
    echo "/etc/hosts inside kubelab Pod:"
    cat /etc/hosts

    typeset -f > $FN_1_LIST

    #ALL_ADD_FNS=$(diff $FN_0_LIST_ORIG $FN_1_LIST | grep "^> .* ()" | sed -e 's/^>  *//' -e 's/ ()//' | grep -v functions: | tr '\n' ' ')
    ALL_ADD_FNS=$(diff $FN_0_LIST_ORIG $FN_1_LIST | grep " function " | sed -e 's/.* function *//' -e 's/ .*//' | grep -v functions: | tr '\n' ' ')
    [ ! -z "$ALL_ADD_FNS" ] && echo "All added functions: $ALL_ADD_FNS"

    [ "$FN_0_LIST_ORIG" != "$FN_0_LIST" ] && {
        #NEW_ADD_FNS=$(diff $FN_0_LIST $FN_1_LIST | grep "^> .* ()" | sed -e 's/^>  *//' -e 's/ ()//' | grep -v functions: | tr '\n' ' ')
        NEW_ADD_FNS=$(diff $FN_0_LIST $FN_1_LIST | grep " function " | sed -e 's/.* function *//' -e 's/ .*//' | grep -v functions: | tr '\n' ' ')
        [ ! -z "$NEW_ADD_FNS" ] && echo "New functions: $NEW_ADD_FNS"
    }
}



function NB_FILE_M {
    # NOTE: nbtool.py to replace this code_cell with markdown cell to say modify a file with these contents
    FILE="$1"; shift
    local LOG=/tmp/__FILE_M

    echo "[$PWD] Writing to file '$FILE'" >$LOG
    __NB_FILE_COMMON $FILE
}

