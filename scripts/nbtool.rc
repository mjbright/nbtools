
set +x

SCRIPT=${BASH_SOURCE[0]}
SCRIPT_DIR=$(dirname $SCRIPT)

NB_START=$( date +%s )

[ "$1" = "-x" ] && { shift; set -x; }

# LAB_IPYNB defaults to README.ipynb ... or to 4th argument if .ipynb:
export LAB_IPYNB=README.ipynb
[ ! -z "${JPY_SESSION_NAME}" ] && export LAB_IPYNB=${JPY_SESSION_NAME##*/}
case "$4" in
    *.ipynb) export LAB_IPYNB=$4;;
esac

### NO # Assume main lab file is called README.ipynb
[ ! -f $LAB_IPYNB ] && {
    echo "[$PWD] $SCRIPT: No $LAB_IPYNB in working directory"
    exit 1
}

#[ ! -f README.ipynb ] && {
#    echo "[$PWD] $SCRIPT: No README.ipynb in working directory"
#    exit 1
#}

## TODO: If need to reactivate
[ -f ~/.venv/TRAINING/bin/activate ] && {
    OLD_PS1=$PS1; source ~/.venv/TRAINING/bin/activate >/dev/null 2>&1; export PS1=$OLD_PS1
    ## source ~/.venv/TRAINING/bin/activate >/dev/null 2>&1
}

NB_DIR=$PWD
echo "setting NB_DIR=$NB_DIR"

#echo "--- \${BASH_SOURCE[0]}='${BASH_SOURCE[0]}'"
#echo "--- \${BASH_SOURCE[1]}='${BASH_SOURCE[1]}'"
# This file:
export NBTOOL_RC=$SCRIPT_DIR/nbtool.rc
export NBTOOL_FN=$SCRIPT_DIR/nbtool.fn
export NBTOOL_PY=$SCRIPT_DIR/nbtool.py

ABS_SCRIPT_DIR=$( dirname $( readlink -f $NBTOOL_RC ) )
export NBTOOL_K8_FN=$ABS_SCRIPT_DIR/nbtool.k8.fn
export NBTOOL_TF_FN=$ABS_SCRIPT_DIR/nbtool.tf.fn
export NBTOOL_DO_FN=$ABS_SCRIPT_DIR/nbtool.do.fn
export NBTOOL_OPA_FN=$ABS_SCRIPT_DIR/nbtool.opa.fn

if [ -z "$STUDENT" ]; then
    export STUDENT=student
    #echo "STUDENT must be set before starting Jupyter - even is set to unknown"
    #exit 1
fi
echo "STUDENT='$STUDENT'"

NBTOOL_INIT=0
if [ ! -z "$1" ]; then
    echo "[$NBTOOL_RC] Got args '$*'"
    NBTOOL_INIT=1

    # -- CONFIG ------------------------------------
    export LAB_TAG=${PWD##*/} 
    export LAB_WEIGHT="$1"; shift
    export LAB_MODE="$1"; shift
    export LAB_NAME="$1"; shift

    #case "$1" in
        #*.ipynb) LAB_IPYNB=$1; shift;;
    #esac

    export LAB_TAG="${PWD##*/}"; shift
    # ----------------------------------------------
    set | grep ^LAB_ > ~/tmp/LAB_vars.env
    cat ~/tmp/LAB_vars.env
fi

echo "==== Reading nbtool functions from '$NBTOOL_FN' ====";
. $NBTOOL_FN

if [ $NBTOOL_INIT -ne 0 ]; then
    # Now use MAX_LEN_MD in nbtool.rc (instead of "export MAX_LINE_LEN=80" here)

    NB_INIT_NOTEBOOK
fi

